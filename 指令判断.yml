app:
  description: 用于集装箱订舱下单
  icon: 🚢
  icon_background: '#E6F4FF'
  mode: advanced-chat
  name: 集装箱订舱系统
  use_icon_as_answer_icon: false
dependencies:
- current_identifier: null
  type: marketplace
  value:
    marketplace_plugin_unique_identifier: langgenius/siliconflow:0.0.7@8b9d2f57d314120744c245b6fe4f8701e1a7490a500d9fb74e9e9dceeaea5f70
kind: app
version: 0.1.5
workflow:
  conversation_variables:
  - description: 起运港
    id: a39d91c2-595b-48f8-8681-2d34384f2e75
    name: POL
    selector:
    - conversation
    - POL
    value: ''
    value_type: string
  - description: 目的港
    id: bc2042c5-593a-494e-8568-31435fec4c2e
    name: POD
    selector:
    - conversation
    - POD
    value: ''
    value_type: string
  - description: 预计离港时间
    id: 3c5158b5-fed0-42b3-8d93-d36f639829e0
    name: ETD
    selector:
    - conversation
    - ETD
    value: ''
    value_type: string
  - description: 集装箱类型
    id: afc9d6fb-ede7-4543-a2ea-8fca6266a058
    name: ContainerType
    selector:
    - conversation
    - ContainerType
    value: ''
    value_type: string
  - description: 发货人
    id: 296d9509-4344-46fd-b9c8-08157d1dd51b
    name: Shipper
    selector:
    - conversation
    - Shipper
    value: ''
    value_type: string
  - description: 承运人
    id: f59daaab-6d65-455d-945e-019f42f56987
    name: Carrier
    selector:
    - conversation
    - Carrier
    value: ''
    value_type: string
  - description: 船名航次
    id: 9b359086-0853-4db5-bde7-6ac6178ab1ee
    name: VesselVoy
    selector:
    - conversation
    - VesselVoy
    value: ''
    value_type: string
  - description: 毛重
    id: b93939cf-a1c8-41bb-a2b6-c0458e4cd9cf
    name: GrossWeight
    selector:
    - conversation
    - GrossWeight
    value: ''
    value_type: string
  environment_variables:
  - key: SMTP_SERVER
    value: smtp.example.com
  - key: SMTP_PORT
    value: '587'
  - key: EMAIL_USER
    value: sender@example.com
  - key: EMAIL_PASSWORD
    value: your_password
  features:
    file_upload:
      enabled: true
      image:
        enabled: false
  graph:
    edges:
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: start
        targetType: llm
      id: start-llm
      source: start
      sourceHandle: source
      target: llm_init
      targetHandle: target
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: code
      id: llm-code
      source: llm_init
      sourceHandle: source
      target: info_extractor
      targetHandle: target
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: if-else
      id: code-condition
      source: info_extractor
      sourceHandle: source
      target: condition_check
      targetHandle: target
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: condition-llm
      source: condition_check
      sourceHandle: false
      target: llm_missing
      targetHandle: target
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: if-else
        targetType: code
      id: condition-code
      source: condition_check
      sourceHandle: true
      target: order_generator
      targetHandle: target
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: code
      id: code-pdf
      source: order_generator
      sourceHandle: source
      target: pdf_generator
      targetHandle: target
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: code
      id: pdf-email
      source: pdf_generator
      sourceHandle: source
      target: email_sender
      targetHandle: target
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: answer
      id: email-answer
      source: email_sender
      sourceHandle: source
      target: final_response
      targetHandle: target
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: loop
      id: llm-loop
      source: llm_missing
      sourceHandle: source
      target: loop
      targetHandle: target
    nodes:
    - data:
        title: 开始
        type: start
        variables:
        - label: "欢迎提供订舱信息：\nPOL/POD/ETD/集装箱类型/发货人/承运人/船名航次/毛重"
          variable: message
      id: start
      position:
        x: 100
        y: 100
    - data:
        model:
          name: deepseek-ai/DeepSeek-R1
          provider: langgenius/siliconflow/siliconflow
        prompt_template:
        - role: system
          text: 收集用户订舱信息
        title: 初始化对话
        type: llm
      id: llm_init
      position:
        x: 300
        y: 100
    - data:
        code: |
          import re
          import random
          
          def extract_info(text):
              patterns = {
                  "POL": r"POL[:：]?\s*([^\s,;]+)",
                  "POD": r"POD[:：]?\s*([^\s,;]+)",
                  "ETD": r"ETD[:：]?\s*([^\s,;]+)",
                  "ContainerType": r"集装箱类型[:：]?\s*([^\s,;]+)",
                  "Shipper": r"发货人[:：]?\s*([^\s,;]+)",
                  "Carrier": r"承运人[:：]?\s*([^\s,;]+)",
                  "VesselVoy": r"船名航次[:：]?\s*([^\s,;]+)",
                  "GrossWeight": r"毛重[:：]?\s*([^\s,;]+)"
              }
              extracted = {}
              missing_fields = []
              for field, pattern in patterns.items():
                  match = re.search(pattern, text, re.IGNORECASE)
                  if match:
                      extracted[field] = match.group(1).strip()
                  else:
                      missing_fields.append(field)
              
              order_number = "SASS" + str(random.randint(10000000, 99999999))
              return {
                  "extracted_data": extracted,
                  "missing_fields": missing_fields,
                  "order_number": order_number
              }
        title: 信息提取
        type: code
      id: info_extractor
      position:
        x: 500
        y: 100
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: length_gt
            value: '0'
            variable_selector:
            - info_extractor
            - missing_fields
        title: 条件检查
        type: if-else
      id: condition_check
      position:
        x: 700
        y: 100
    - data:
        answer: "请补全以下信息：{{#info_extractor.missing_fields#}}"
        title: 信息补全
        type: llm
      id: llm_missing
      position:
        x: 900
        y: 100
    - data:
        code: |
          order_info = {
              **extracted_data,
              "order_number": order_number,
              "timestamp": datetime.now().strftime("%Y-%m-%d %H:%M:%S")
          }
        title: 订单生成
        type: code
      id: order_generator
      position:
        x: 700
        y: 300
    - data:
        code: |
          from reportlab.pdfgen import canvas
          
          def generate_pdf(data):
              filename = f"{data['order_number']}.pdf"
              c = canvas.Canvas(filename)
              y = 800
              c.drawString(100, y, "订舱确认单")
              y -= 30
              for k, v in data.items():
                  c.drawString(100, y, f"{k}: {v}")
                  y -= 20
              c.save()
              return filename
          
          pdf_path = generate_pdf(order_info)
        title: PDF生成
        type: code
      id: pdf_generator
      position:
        x: 900
        y: 300
    - data:
        code: |
          import smtplib
          from email.mime.multipart import MIMEMultipart
          from email.mime.text import MIMEText
          from email.mime.application import MIMEApplication
          
          msg = MIMEMultipart()
          msg['From'] = EMAIL_USER
          msg['To'] = 'operations@example.com'
          msg['Subject'] = f"新订舱单 {order_number}"
          
          body = f'''订单详情：
          订单号：{order_number}
          {str(order_info)}'''
          
          msg.attach(MIMEText(body))
          
          with open(pdf_path, 'rb') as f:
              part = MIMEApplication(f.read(), Name=pdf_path)
              part['Content-Disposition'] = f'attachment; filename="{pdf_path}"'
              msg.attach(part)
          
          with smtplib.SMTP(SMTP_SERVER, int(SMTP_PORT)) as server:
              server.starttls()
              server.login(EMAIL_USER, EMAIL_PASSWORD)
              server.sendmail(EMAIL_USER, 'operations@example.com', msg.as_string())
        title: 邮件发送
        type: code
      id: email_sender
      position:
        x: 1100
        y: 300
    - data:
        answer: |
          ✅ 订舱成功！
          订单号：{{#info_extractor.order_number#}}
          PDF已发送至operations@example.com
        title: 最终回复
        type: answer
      id: final_response
      position:
        x: 1300
        y: 300
    viewport:
      x: 0
      y: 0
      zoom: 1
